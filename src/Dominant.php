<?php declare(strict_types=1);
/**
 * (c) 2005-2024 Dmitry Lebedev <dl@adios.ru>
 * This source code is part of the Ultra library.
 * Please see the LICENSE file for copyright and licensing information.
 */
namespace Ultra\Enum;

/**
 * Интерфейс установливает один из вариантов перечисления в качестве основного варианта,
 * что позволяет использовать это значение в разных частях программы без явного на него указания.
 */
interface Dominant extends \UnitEnum {
	/**
	 * Вернуть главный вариант перечисления по умолчанию, либо вернуть NULL в случае ошибки.
	 * Необходимо, для установки в качестве основного варианта перечисления, если основной
	 * вариант для перечисления ещё не был выбран.
	 * Ошибка должна возникать в случае перечисления без вариантов.
	 */
	public static function getDefaultCase(): self|null;

	/**
	 * При вызове без аргументов вернуть текущий главный вариант перечисления, если главный
	 * вариант перечисления ранее не устанавливался, вернуть вариант по умолчанию, определяемый
	 * методом getDefaultCase(), либо NULL, если методу getDefaultCase() не удалось обнаружить
	 * в перечислении подходящего варианта (пустое перечисление).
	 */
	public static function main(): self|null;

	/**
	 * Сделать вариант перечисления с именем $name главным вариантом.
	 * Вернет предыдущий вариант перечисления, либо вариант установленный главным при первом
	 * обращении к текущему методу конкретного перечисления.
	 * Вернет NULL в случае ошибки. Ошибка должна возникать, когда в перечислении отсутствует
	 * вариант с именем $name.
	 */
	public static function setMainByName(string $name): self|null;

	/**
	 * Вернуть имя главного варианта в текущем перечислении, либо NULL в случае ошибки.
	 */
	public static function getMainName(): string|null;

	/**
	 * Вызов варианта перечисления, как статической функции.
	 * При вызове без аргументов, вернуть экземпляр перечисления, если его вариант на момент
	 * вызова является основным, иначе вернуть NULL.
	 * При вызове с одним истинным аргументом (любое значение соответствующее TRUE) сделать вариант
	 * перечисления главным и вернуть его экземпляр. В случае ошибки, вернуть NULL.
	 * При вызове с двумя истинными аргументом сделать вариант перечисления главным,
	 * но вернуть экземпляр, соответствующий предыдущему главному варианту, либо варианту
	 * по умолчанию (поведение аналогичное методу main()). В случае ошибки, вернуть NULL.
	 */
	public static function __callStatic(string $name, array $arguments): self|null;

	/**
	 * Проверить, является ли вариант текущего экземпляра перечисления основным.
	 * Вернёт TRUE, если вариант текущего экземпляра перечисления является основным,
	 * в противном случае вернёт FALSE.
	 */
	public function isMain(): bool;

	/**
	 * Сделать вариант текущего экземпляра перечисления главным.
	 * Вернёт предыдущий главный экземпляр перечисления, либо вариант по умолчанию,
	 * если главный экземпляр ранее не устанавливался.
	 */
	public function setMain(): self;
}
